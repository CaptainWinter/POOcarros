import java.util.ArrayList;

public class UpdateData {

	public static boolean upadte(RentalAgency rentalAgency, ArrayList<Branch> myBranches, boolean myBool) {

		SingleAbstractMethod myInterface = (p1, p2, p3) -> {

			String branchName, customerName, carName;
			int customerInitialAmount = -1;

			int option = Menu.menuAdd();

			switch (option) {
			case 1:
				branchName = RequestData.askBranchName();

				if (p3) {

					if (p1.addBranch(branchName)) {
						FuncBranch.insertBranch(p2, branchName);
					} else {
						System.out.println("Ramificacao ja existente");
					}

				} else {

					if (p1.deleteBranch(branchName)) {
						FuncBranch.deleteBranch(p2, branchName);
					} else {
						System.out.println("Ramificacao inexistente");
					}

				}

				return true;
			case 2:
				if (!RequestData.availableBranches(p1))
					break;

				branchName = RequestData.askBranchName();
				customerName = RequestData.askCustomerName();
				
				if (p3) {
					
					customerInitialAmount = RequestData.askCustomerInitialAmount();

					if (p1.addCustomer(branchName, customerName, customerInitialAmount)) {
						FuncBranch.insertCustomer(p2, branchName, customerName, customerInitialAmount);
					} else {
						System.out.println("Cliente ja existente");
					}

				} else {

					if (p1.deleteCustomer(branchName, customerName)) {
						FuncBranch.deleteCustomer(p2, branchName, customerName);
					} else {
						System.out.println("Cliente inexistente");
					}

				}

				return true;
			case 3:
				if (!RequestData.availableBranches(p1))
					break;

				branchName = RequestData.askBranchName();

				if (!RequestData.availableCustomers(p1.findBranch(branchName)))
					break;

				customerName = RequestData.askCustomerName();
				carName = RequestData.askCarName();
				customerInitialAmount = RequestData.askCustomerInitialAmount();

				if (p3) {
					if (p1.addCar(branchName, customerName, carName, customerInitialAmount)) {
						FuncBranch.insertBranch(p2, branchName);
					} else {
						System.out.println("Carro sem cliente valido ou carro ja existente");
					}
				} else {
					if (p1.deleteCar(branchName, customerName, carName)) {
						
					} else {
						System.out.println("Carro inexistente");
					}
				}
				
				
				return true;
			case 4:
				return true;
			default:
				System.out.println("Valor ilegal tente novamente:\n");
				break;
			}

			return false;

		};

		return myInterface.sam(rentalAgency, myBranches, myBool);

	}

}
