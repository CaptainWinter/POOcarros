import java.io.*;
import java.util.ArrayList;

public class FuncBranch {

	public static boolean insertBranch(ArrayList<Branch> branches, String branchName) {

		int checker = 0;

		for (int i = 0; i < branches.size(); i++) {
			if (!branches.get(i).getName().equals(branchName))
				checker++;
		}

		if (checker == branches.size()) {
			Branch branch = new Branch(branchName);
			branches.add(branch);
			updateFile(branches);
			return true;
		}

		return false;

	}

	public static boolean insertCustomer(ArrayList<Branch> branches, String branchName, String customerName,
			int initialAmount) {

		ArrayList<Boolean> checker = new ArrayList<>();
		int check = 0;

		for (int i = 0; i < branches.size(); i++) {

			if (branches.get(i).getName().equals(customerName)) {

				ArrayList<Customer> customers = branches.get(i).getCustomers();

				for (int j = 0; j < customers.size(); j++) {

					checker.add(i, (!customers.get(j).getName().equals(customerName)) ? true : false);

				}

			}

			if (checker.get(i)) {
				branches.get(i).newCustomer(customerName, initialAmount);
				updateFile(branches);
			}

		}

		return false;

	}

	public static void deleteBranch(ArrayList<Branch> branches, String branchName) {

		for (int i = 0; i < branches.size(); i++) {
			if (branches.get(i).getName().equals(branchName))
				branches.remove(i);
		}

		updateFile(branches);

	}

	public static void updateFile(ArrayList<Branch> branches) {
		try (ObjectOutputStream os = new ObjectOutputStream(
				new FileOutputStream("C:\\Users\\aluno\\Desktop\\branches.dat"))) {
			os.writeObject(branches);
			os.flush();
		} catch (IOException e) {
			System.out.println(e.getMessage());
		}
	}

}
