import java.io.Serializable;
import java.util.ArrayList;
import java.util.Objects;

@SuppressWarnings("serial")
public class Branch implements Serializable {

	private String name;
	private ArrayList<Customer> customers;

	public Branch(String name) {
		this.name = name;
		this.customers = new ArrayList<Customer>();
	}

	public String getName() {
		return name;
	}

	public ArrayList<Customer> getCustomers() {
		return customers;
	}

	@Override
	public String toString() {
		return "nomeRamificacao= " + name;
	}
	
	@Override
	public Object clone() {
		Branch copia = new Branch(this.name);
		return copia;
	}

	@Override
	public boolean equals(Object obj) {

		if (this == obj)
			return true;

		if (obj == null)
			return false;

		if (getClass() != obj.getClass())
			return false;

		Branch other = (Branch) obj;

		return Objects.equals(customers, other.customers) && Objects.equals(name, other.name);

	}

	public boolean newCustomer(String customerName, double initialAmount) {

		if (findCustomer(customerName) == null) {
			this.customers.add(new Customer(customerName, initialAmount));
			return true;
		}

		return false;

	}

	public boolean addCustomerTransaction(String carName, String customerName, double amount) {

		Customer existingCustomer = findCustomer(customerName);

		if (existingCustomer != null) {

			double currentBalance = existingCustomer.currentBalance();

			existingCustomer.addTransaction(carName, currentBalance, amount);
			return true;

		}

		return false;

	}

	public Customer findCustomer(String customerName) {

		for (int i = 0; i < this.customers.size(); i++) {

			Customer checkedCustomer = this.customers.get(i);

			if (checkedCustomer.getName().equals(customerName))
				return checkedCustomer;

		}

		return null;

	}

}
